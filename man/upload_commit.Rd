% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/git-commits-deprecated.R
\name{upload_commit}
\alias{upload_commit}
\title{Upload a directory of files and create a commit on a branch}
\usage{
upload_commit(
  branch,
  message,
  path,
  parents,
  committer,
  author,
  repo,
  replace = TRUE,
  ignore = c("\\\\.git", "\\\\.Rproj\\\\.user", "\\\\.Rhistory", "\\\\.RData",
    "\\\\.Ruserdata"),
  token = getOption("github.token"),
  api = getOption("github.api"),
  ...
)
}
\arguments{
\item{branch}{(string) The name of the branch to set the commit as head.}

\item{message}{(string) The commit message}

\item{path}{(string) The path to the directory, which is to be uploaded as a tree.}

\item{parents}{(character, optional) The SHAs of the commits that were the parents of this
commit. If not specified the commit will be written as a root commit. For a single parent,
one SHA should be provided; for a merge commit, a character vector of more than one should be
provided.}

\item{committer}{(list, optional) The name and email address of the committer. This needs
to be specified as a named list, e.g. \code{list(name = "Bob Smith", email = "bob.smith@acme.com")}.
If not specified then the authenticated user is used.}

\item{author}{(list, optional) The name and email address of the author. This needs to be
specified as a named list, e.g. \code{list(name = "Bob Smith", email = "bob.smith@acme.com")}.
If not specified then the authenticated user is used.}

\item{repo}{(string) The repository specified in the format: \code{owner/repo}.}

\item{replace}{(logical, optional) Whether the commit should replace the previous one or
just update the files within the directory (see description). Default: \code{TRUE}.}

\item{ignore}{(character) A character vector of regular expressions. If any of these are
detected in a file name they are not uploaded. Default: \code{"\\\\.git"}, \code{"\\\\.Rproj\\\\.user"},
\code{"\\\\.Rhistory"}, \code{"\\\\.RData"} & \code{"\\\\.Ruserdata"}}

\item{token}{(string, optional) The personal access token for GitHub authorisation. Default:
value stored in the environment variable \code{GITHUB_TOKEN} (or \code{GITHUB_PAT}) or in the
R option \code{"github.token"}.}

\item{api}{(string, optional) The URL of GitHub's API. Default: the value stored in the
environment variable \code{GITHUB_API} or in the R option \code{"github.api"}.}

\item{...}{Parameters passed to \code{\link[=gh_request]{gh_request()}}.}
}
\value{
A tibble describing the commit, with the following columns
(see \href{https://developer.github.com/v3/repos/commits/}{GitHub's documentation}
for more details):
\itemize{
\item \strong{sha}: The SHA of the commit.
\item \strong{message}: The commit message recorded in GitHub.
\item \strong{author_name}: The author of the commit.
\item \strong{author_email}: The author's email address.
\item \strong{committer_name}: The committer of the commit.
\item \strong{committer_email}: The committer's email address.
\item \strong{date}: The date and time of the commit.
\item \strong{url}: The URL to get the commit details from GitHub.
\item \strong{tree_sha}: The SHA of the git tree.
\item \strong{tree_url}: The URL to get the tree details from GitHub.
\item \strong{parent_sha}: The SHA(s) of the parent commit(s).
\item \strong{parent_url}: The URL(s) to get the parent's details from GitHub.
}
}
\description{
This function uploads all the files in the specified directory path (using \code{\link[=upload_tree]{upload_tree()}}).
It the creates a new commit (using \code{\link[=create_commit]{create_commit()}}) and sets it as the head of the
specified branch (using \code{\link[=create_branches]{create_branches()}}).
}
\details{
The default behaviour is to treat the directory as containing the entire set of files and
completely \code{replace} the previous commit with this one. This means that if a previously
existing file is not in the directory it will be deleted in the commit. Alternatively, if
you just want to update a few files, you can specify \code{replace = FALSE}, in which case
the files in the directory will replace the ones in the previous commit, and all other
files will remain unchanged. This is useful if you have a lot of files in the commit.

\url{https://developer.github.com/v3/git/blobs/#create-a-blob}

\url{https://developer.github.com/v3/git/trees/#create-a-tree}

\url{https://developer.github.com/v3/git/commits/#create-a-commit}

\url{https://developer.github.com/v3/git/refs/#create-a-reference}
}
