% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/organizations.R
\name{view_organizations}
\alias{view_organizations}
\alias{view_organization}
\alias{browse_organization}
\title{View organizations in GitHub}
\usage{
view_organizations(user, n_max = 1000, ...)

view_organization(org, ...)

browse_organization(org, ...)
}
\arguments{
\item{user}{(string, optional) The login of the user. If \code{NULL} the
authenticated user is used.}

\item{n_max}{(integer, optional) Maximum number to return. Default: \code{1000}.}

\item{...}{Parameters passed to \code{\link[=gh_page]{gh_page()}} or \code{\link[=gh_request]{gh_request()}}.}

\item{org}{(string) The login of the organization.}
}
\value{
\code{view_organizations()} returns a tibble of organization properties.
\code{view_organization()} returns a list of properties for a single
organization. \code{browse_organization()} opens the default browser on the
organization's page and returns the URL.

\strong{Organization Properties:}
\itemize{
\item \strong{id}: The ID of the organization.
\item \strong{login}: The login name of the organization.
\item \strong{description}: The description of the organization.
}

The following are only returned using \code{view_organization()}:
\itemize{
\item \strong{name}: The name of the organization.
\item \strong{company}: The name of the associated company.
\item \strong{blog}: The address for a blog.
\item \strong{location}: The geographical location.
\item \strong{email}: The email address for the organization.
\item \strong{is_verified}: Whether the organization has been verified.
\item \strong{has_organization_projects}: Whether the organization can have projects.
\item \strong{has_repository_projects}: Whether the organization's repositories can
have projects.
\item \strong{public_repos}: The number of public repositories.
\item \strong{public_gists}: The number of public gists.
\item \strong{html_url}: The address for the organization's GitHub web page.
\item \strong{created_at}: When the organization was created.
\item \strong{total_private_repos}: The number of private repositories.
\item \strong{owned_private_repos}:  The number of owned private repositories.
\item \strong{private_gists}:  The number of private gists.
\item \strong{disk_usage}:  The total disk usage for the organization.
\item \strong{collaborators}: The number of collaborators.
\item \strong{billing_email}: The email address for billing.
\item \strong{plan_name}: The name of the GitHub plan.
\item \strong{plan_space}: The total space allocated for the plan.
\item \strong{plan_private_repos}: The number of private repositories for the plan.
\item \strong{default_repository_permission}: The default access for new repositories.
\item \strong{two_factor_requirement_enabled}: Whether members require two-factor
authentication.
\item \strong{members_can_create_repositories}: Whether members can create
repositories.
}
}
\description{
\code{view_organizations()} summarises organizations in a table with the
properties as columns and a row for each organization. \code{view_organization()}
returns a list of all properties for a single organization.
\code{browse_organization()} opens the web page for the organization in the
default browser.
}
\details{
You can summarise all the organizations a user is a member of by specifying
the user login, or the authenticated user if it is set to \code{NULL}. If a user
is not supplied the first \code{n_max} organizations of GitHub are returned.

For more details see the GitHub API documentation:
\itemize{
\item \url{https://docs.github.com/en/free-pro-team@latest/rest/reference/orgs#list-organizations-for-a-user}
\item \url{https://docs.github.com/en/free-pro-team@latest/rest/reference/orgs#list-organizations-for-the-authenticated-user}
\item \url{https://docs.github.com/en/free-pro-team@latest/rest/reference/orgs#list-organizations}
\item \url{https://docs.github.com/en/free-pro-team@latest/rest/reference/orgs#get-an-organization}
}
}
\examples{
\dontrun{

  # View organizations a user is a member of
  view_organizations(user = "ChadGoymer")

  # View organizations the authenticated user is a member of
  view_organizations(user = NULL)

  # View all organizations
  view_organizations()

  # View a single organization in more detail.
  view_organization("HairyCoos")

  # Browse a organization's GitHub page
  browse_organization("HairyCoos")

}

}
