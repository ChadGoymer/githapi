% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/organizations.R
\name{update_organization}
\alias{update_organization}
\title{Update an organization's properties in GitHub}
\usage{
update_organization(
  org,
  name,
  description,
  email,
  location,
  company,
  billing_email,
  has_organization_projects,
  has_repository_projects,
  default_repository_permission,
  members_can_create_repositories,
  ...
)
}
\arguments{
\item{org}{(string) The login of the organization.}

\item{name}{(string, optional) The shorthand name of the company.}

\item{description}{(string, optional) The description of the company.}

\item{email}{(string, optional) The publicly visible email address.}

\item{location}{(string, optional) The location.}

\item{company}{(string, optional) The company name.}

\item{billing_email}{(string, optional) Billing email address. This address is not
publicized.}

\item{has_organization_projects}{(boolean, optional) Toggles whether an organization can use
organization projects.}

\item{has_repository_projects}{(boolean, optional) Toggles whether repositories that belong
to the organization can use repository projects.}

\item{default_repository_permission}{(string, optional) Default permission level members have
for organization repositories:
\itemize{
\item \code{"read"}: can pull, but not push to or administer this repository.
\item \code{"write"}: can pull and push, but not administer this repository.
\item \code{"admin"}: can pull, push, and administer this repository.
\item \code{"none"}: no permissions granted by default.
}

Default: \code{"read"}.}

\item{members_can_create_repositories}{(boolean, optional) Toggles the ability of non-admin
organization members to create repositories. Can be one of:
\itemize{
\item \code{TRUE}: all organization members can create repositories.
\item \code{FALSE}: only organization owners can create repositories.
}

Default: \code{TRUE}. Note: A parameter can override this parameter. See
\code{members_allowed_repository_creation_type} for details.}

\item{...}{Parameters passed to \code{\link[=gh_request]{gh_request()}}.}
}
\value{
\code{update_organization()} returns a list of the organization's properties.

\strong{Organization Properties:}
\itemize{
\item \strong{id}: The ID of the organization.
\item \strong{login}: The login name of the organization.
\item \strong{name}: The name of the organization.
\item \strong{description}: The description of the organization.
\item \strong{company}: The name of the associated company.
\item \strong{blog}: The address for a blog.
\item \strong{location}: The geographical location.
\item \strong{email}: The email address for the organization.
\item \strong{is_verified}: Whether the organization has been verified.
\item \strong{has_organization_projects}: Whether the organization can have projects.
\item \strong{has_repository_projects}: Whether the organization's repositories can have projects.
\item \strong{public_repos}: The number of public repositories.
\item \strong{public_gists}: The number of public gists.
\item \strong{html_url}: The address for the organization's GitHub web page.
\item \strong{created_at}: When the organization was created.
\item \strong{total_private_repos}: The number of private repositories.
\item \strong{owned_private_repos}:  The number of owned private repositories.
\item \strong{private_gists}:  The number of private gists.
\item \strong{disk_usage}:  The total disk usage for the organization.
\item \strong{collaborators}: The number of collaborators.
\item \strong{billing_email}: The email address for billing.
\item \strong{plan_name}: The name of the GitHub plan.
\item \strong{plan_space}: The total space allocated for the plan.
\item \strong{plan_private_repos}: The number of private repositories for the plan.
\item \strong{default_repository_settings}: The default access for new repositories.
\item \strong{two_factor_requirement_enabled}: Whether members require two-factor authentication.
\item \strong{members_can_create_repositories}: Whether members can create repositories.
}
}
\description{
This function updates an organization's properties in GitHub. You can only update an
organization if you have the appropriate permissions.
}
\details{
For more details see the GitHub API documentation:
\itemize{
\item \url{https://developer.github.com/v3/orgs/#edit-an-organization}
}
}
\examples{
\dontrun{
  # Update some of your organization properties
  update_organization(
    org                             = "HairyCoos",
    description                     = "We are the Hairy Coos!",
    location                        = "The Highlands",
    default_repository_permission   = "write",
    members_can_create_repositories = FALSE)
}

}
