% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/files.R
\name{write_github_file}
\alias{write_github_file}
\alias{write_github_lines}
\alias{write_github_csv}
\title{Write a file to a branch}
\usage{
write_github_file(content, path, branch, message, repo, author, committer, ...)

write_github_lines(
  content,
  path,
  branch,
  message,
  repo,
  author,
  committer,
  ...
)

write_github_csv(content, path, branch, message, repo, author, committer, ...)
}
\arguments{
\item{content}{(character or data.frame) The content of the file.}

\item{path}{(string) The path to create the file at, within the repository.}

\item{branch}{(string) The name of the branch to make the new commit on.}

\item{message}{(string) The commit message.}

\item{repo}{(string) The repository specified in the format: \code{owner/repo}.}

\item{author}{(list, optional) A the name and email address of the user who wrote the
changes in the commit.}

\item{committer}{(list, optional) A the name and email address of the user who created
the commit.}

\item{...}{Parameters passed to \code{\link[readr:write_file]{readr::write_file()}}, \code{\link[readr:write_lines]{readr::write_lines()}} or
\code{\link[readr:write_csv]{readr::write_csv()}}.}
}
\value{
\code{write_github_file()}, \code{write_github_lines()} and \code{write_github_csv()} return a
list of the commit properties.

\strong{Commit Properties:}
\itemize{
\item \strong{sha}: The commit SHA.
\item \strong{message}: The commit message.
\item \strong{author_name}: The author's name.
\item \strong{author_email}: The author's email address.
\item \strong{committer_name}: The committer's name.
\item \strong{committer_email}: The committer's email address.
\item \strong{tree_sha}: The SHA of the file tree.
\item \strong{parent_sha}: The commit SHA of the parent(s).
\item \strong{date}: The date the commit was made.
}
}
\description{
These functions writes files to a repository by creating a new commit on the specified
branch. \code{write_github_file()} writes the \code{content} to a text file, using
\code{\link[readr:write_file]{readr::write_file()}}; \code{write_github_lines()} writes to a text file, using
\code{\link[readr:write_lines]{readr::write_lines()}} and \code{write_github_csv()} writes a CSV file, using
\code{\link[readr:write_csv]{readr::write_csv()}}.
}
\examples{
\dontrun{

  write_github_file(
    content = "# This is a new file\\\\n\\\\n Created by `write_github_file()`",
    path    = "new-file.md",
    branch  = "master",
    message = "Created a new file with write_github_file()",
    repo    = "ChadGoymer/githapi")

  write_github_lines(
    content   = c("# This is a new file", "", "Created by `write_github_lines()`"),
    path      = "new-file.md",
    branch    = "master",
    message   = "Created a new file with write_github_lines()",
    repo      = "ChadGoymer/githapi")

  write_github_csv(
    content = tibble(letters = LETTERS, numbers = 1:26),
    path    = "new-file.md",
    branch  = "master",
    message = "Updated an existing file with write_github_csv()",
    repo    = "ChadGoymer/githapi")
}

}
