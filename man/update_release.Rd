% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/releases.R
\name{update_release}
\alias{update_release}
\title{Update a release in a repository}
\usage{
update_release(
  release,
  repo,
  tag,
  name,
  body,
  ref,
  draft = FALSE,
  prerelease = FALSE,
  ...
)
}
\arguments{
\item{release}{(string) The id or current tag of the release.}

\item{repo}{(string) The repository specified in the format: \code{owner/repo}.}

\item{tag}{(string, optional) The name of the new tag.}

\item{name}{(string, optional) The name of the release.}

\item{body}{(string, optional) The description of the release.}

\item{ref}{(string, optional) Either a SHA or branch used to identify the commit. If the
\code{tag} exists this \code{ref} is ignored. If not supplied the repositories default branch is
used.}

\item{draft}{(boolean, optional) Whether the release is a draft. Default: \code{FALSE}.}

\item{prerelease}{(boolean, optional) Whether the release is a pre-release.
Default: \code{FALSE}.}

\item{...}{Parameters passed to \code{\link[=gh_request]{gh_request()}}.}
}
\value{
\code{update_release()} returns a list of the release properties.

\strong{Release Properties:}
\itemize{
\item \strong{id}: The id of the release.
\item \strong{tag}: The tags associated with the release.
\item \strong{name}: The name of the release.
\item \strong{body}: The description of the release.
\item \strong{commit}: The commit associated with the release.
\item \strong{draft}: Whether the release is draft.
\item \strong{prerelease}:  Whether it is a pre-release.
\item \strong{author_login}: The author's account login.
\item \strong{assets}: The name of the assets associated with the release.
\item \strong{html_url}: The address of the release's web page.
\item \strong{created_at}: The time and date the release was created.
\item \strong{published_at}: The time and date the release was published.
}
}
\description{
This function updates a release in the specified repository. It can be used to update
properties, such as \code{name} or whether it is \code{draft}, or it can be used to point the release
at a new commit by providing a Git reference, which can be either a SHA or branch.
}
\details{
For more details see the GitHub API documentation:
\itemize{
\item \url{https://developer.github.com/v3/repos/releases/#edit-a-release}
}
}
\examples{
\dontrun{

  update_release(
    release = "1.0.0",
    repo    = "ChadGoymer/githapi",
    tag     = "1.0.1",
    name    = "Updated production release",
    body    = "This release has been updated by update_release()")

  update_release(
    release    = 1234567,
    tag        = "1.0.1",
    repo       = "ChadGoymer/githapi",
    name       = "Promoted draft release",
    body       = "This release has been updated by update_release()",
    draft      = FALSE,
    prerelease = FALSE)

}

}
