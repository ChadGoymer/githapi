% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pull-requests.R
\name{view_pull_requests}
\alias{view_pull_requests}
\alias{view_pull_request}
\alias{browse_pull_request}
\title{View pull requests within a repository}
\usage{
view_pull_requests(
  repo,
  head,
  base,
  state = "open",
  sort = "created",
  direction = "desc",
  n_max = 1000,
  ...
)

view_pull_request(pull_request, repo, n_max = 1000, ...)

browse_pull_request(pull_request, repo, ...)
}
\arguments{
\item{repo}{(string) The repository specified in the format: \code{owner/repo}.}

\item{head}{(string) The branch to merge in. If it is not in the specified \code{repo} then the
owner must prefix the branch name, e.g. \code{"owner:branch"}.}

\item{base}{(string) The branch to merge into.}

\item{state}{(string, optional) The state of the pull requests to return. Can be either
\code{"open"}, \code{"closed"}, or \code{"all"}. Default: \code{"open"}.}

\item{sort}{(string, optional) The property to order the returned pull requests by. Can
be either \code{"created"}, \code{"updated"}, \code{"popularity"} (comment count) or \code{"long-running"}
(age, filtering by pulls updated in the last month). Default: \code{"created"}.}

\item{direction}{(string, optional) The direction of the sort. Can be either \code{"asc"} or
\code{"desc"}. Default: \code{"desc"}.}

\item{n_max}{(integer, optional) Maximum number to return. Default: \code{1000}.}

\item{...}{Parameters passed to \code{\link[=gh_page]{gh_page()}} or \code{\link[=gh_request]{gh_request()}}.}

\item{pull_request}{(string or character) The number or title of the pull request.}
}
\value{
\code{view_pull_requests()} returns a tibble of pull request properties.
\code{view_pull_request()} returns a list of properties for a single pull request.
\code{browse_pull_request()} opens the default browser on the pull request's page and returns
the URL.

\strong{Pull Request Properties:}
\itemize{
\item \strong{number}: The number assigned to the pull request.
\item \strong{title}: The title of the pull request.
\item \strong{body}: The body contents of the pull request.
\item \strong{head_sha}: The SHA of the commit to merge in.
\item \strong{head_ref}: The reference, or branch, to merge in.
\item \strong{head_repo}: The repository containing the branch to merge in.
\item \strong{base_sha}: The SHA of the commit to merge onto.
\item \strong{base_ref}: The reference, or branch, to merge onto.
\item \strong{merge_sha}: The SHA of the merge commit, if the merge has been completed.
\item \strong{assignees}: The users assigned to the pull request.
\item \strong{reviewers}: The users reviewing the pull request.
\item \strong{labels}: The labels attached to the pull request.
\item \strong{milestone}: The milestone assigned to the pull request.
\item \strong{state}: The state of the pull request - either \code{"open"} or \code{"closed"}.
\item \strong{repository}: The repository the pull request is in.
\item \strong{html_url}: The URL of the pull request's web page in GitHub.
\item \strong{diff_url}: The URL of the pull request's diff web page in GitHub.
\item \strong{creator}: The creator's login.
\item \strong{created_at}: When the pull request was created.
\item \strong{updated_at}: When the pull request was last updated.
\item \strong{mergeable}: Whether the pull request can be merged.
\item \strong{rebaseable}: Whether the pull request can be rebased.
\item \strong{merged}: Whether the pull request has been merged
\item \strong{merged_by}: Who merged the pull request.
\item \strong{merged_at}: When the pull request was merged.
\item \strong{closed_at}: When the pull request was closed.
}

Additionally, the \code{view_pull_request()} function also returns:
\itemize{
\item \strong{commits}: Information about the commits made on the branch.
\itemize{
\item \strong{message}: The message specified for the commit.
\item \strong{author_name}: The author's name.
\item \strong{author_email}: The author's email address.
\item \strong{author_date}: The date/time it was authored.
\item \strong{committer_name}: The committer's name.
\item \strong{committer_email}: The committer's email address.
\item \strong{committer_date}: The date/time it was committed.
\item \strong{parent_sha}: The SHA of the parent commit(s).
\item \strong{html_url}: The URL of the commit's web page in GitHub.
}
\item \strong{files}: Information about the files changed.
\itemize{
\item \strong{sha}: The SHA of the file.
\item \strong{filename}: The name of the file.
\item \strong{status}: The status of the file.
\item \strong{additions}: The number of lines added.
\item \strong{deletions}: The number of lines deleted.
\item \strong{changes}: The number of lines changed.
\item \strong{patch}: The patch information.
\item \strong{html_url}: The URL of the file's web page in GitHub.
}
\item \strong{reviews}: The reviews registered.
\itemize{
\item \strong{body}: The contents of the review.
\item \strong{state}: The state of the review.
\item \strong{user}: The user who added the review.
\item \strong{html_url}: Th URL of the review's web page in GitHub.
\item \strong{submitted_at}: When the review was submitted.
}
}
}
\description{
\code{view_pull_requests()} summarises pull requests in a table with the properties as columns
and a row for each pull request in the repository. \code{view_pull_request()} returns a list of
all properties for a single pull request. \code{browse_pull_request()} opens the web page for
the pull request in the default browser.
}
\details{
You can filter the pull requests by the head and base branches (the branch to merge in and
the branch to merge into) or the state (whether they are \code{"open"} or \code{"closed"}). You can
also order the results with \code{sort} and \code{direction}.

For more details see the GitHub API documentation:
\itemize{
\item \url{https://developer.github.com/v3/pulls/#list-pull-requests}
\item \url{https://developer.github.com/v3/pulls/#get-a-single-pull-request}
}
}
\examples{
\dontrun{

  # View all open pull requests
  view_pull_requests("ChadGoymer/githapi")

  # View all closed pull requests
  view_pull_requests("ChadGoymer/githapi", state = "closed")

  # View all pull requests for the "main" branch
  view_pull_requests("ChadGoymer/githapi", base = "main")

  # View pull requests, sorted by the most recently updated
  view_pull_requests("ChadGoymer/githapi", sort = "updated", direction = "desc")

  # View single pull request
  view_pull_request("test pull request", repo = "ChadGoymer/githapi")

  # Open a pull request's page in a browser
  browse_pull_request("test pull request", repo = "ChadGoymer/githapi")

}

}
