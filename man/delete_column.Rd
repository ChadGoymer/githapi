% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/columns.R
\name{delete_column}
\alias{delete_column}
\title{Delete a column in a GitHub project}
\usage{
delete_column(column, project, repo, user, org, ...)
}
\arguments{
\item{column}{(integer or string) Either the column number or name.}

\item{project}{(integer or string) Either the project number or name.}

\item{repo}{(string, optional) The repository specified in the format: \code{owner/repo}.}

\item{user}{(string, optional) The login of the user.}

\item{org}{(string, optional) The name of the organization.}

\item{...}{Parameters passed to \code{\link[=gh_request]{gh_request()}}.}
}
\value{
\code{delete_column()} returns a TRUE if successfully deleted.
}
\description{
This function deletes a column in a GitHub project. Care should be taken as it will not be
recoverable.
}
\details{
You can delete a column associated with either a repository, user or organization, by
supplying them as an input, as long as you have appropriate permissions.

For more details see the GitHub API documentation:
\itemize{
\item \url{https://developer.github.com/v3/columns/#delete-a-column}
}
}
\examples{
\dontrun{
  # Delete a column in a repository project
  delete_column(
    column  = "Test column",
    project = "Test project",
    repo    = "ChadGoymer/test-githapi")

  # Delete a column in a user's project
  delete_column(
    column  = "Test column",
    project = "Test project",
    user    = "ChadGoymer")

  # Delete a column in an organization's project
  delete_column(
    column  = "Test column",
    project = "Test project",
    org     = "HairyCoos")
}

}
