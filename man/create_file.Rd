% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/files.R
\name{create_file}
\alias{create_file}
\title{Create a file in a new commit}
\usage{
create_file(
  content,
  path,
  branch,
  message,
  repo,
  parent,
  author,
  committer,
  ...
)
}
\arguments{
\item{content}{(string) The content of the file specified as a single string.}

\item{path}{(string) The path to create the file at, within the repository.}

\item{branch}{(string) The name of the branch to make the new commit on.}

\item{message}{(string) The commit message.}

\item{repo}{(string) The repository specified in the format: \code{owner/repo}.}

\item{parent}{(string, optional) If creating a new branch the the parent commit must
be specified as either a SHA, branch or tag.}

\item{author}{(list, optional) A the name and email address of the user who wrote the
changes in the commit.}

\item{committer}{(list, optional) A the name and email address of the user who created
the commit.}

\item{...}{Parameters passed to \code{\link[=gh_request]{gh_request()}}.}
}
\value{
\code{create_file()}returns a list of the commit properties.

\strong{Commit Properties:}
\itemize{
\item \strong{sha}: The commit SHA.
\item \strong{message}: The commit message.
\item \strong{author_name}: The author's name.
\item \strong{author_email}: The author's email address.
\item \strong{committer_name}: The committer's name.
\item \strong{committer_email}: The committer's email address.
\item \strong{tree_sha}: The SHA of the file tree.
\item \strong{parent_sha}: The commit SHA of the parent(s).
\item \strong{date}: The date the commit was made.
}
}
\description{
This function adds a file in a repository in GitHub by creating a new commit on the
specified branch. If the branch does not already exist a \code{parent} commit must be specified
and a new branch is created from it. If the file already exists \code{create_file()} throws an
error.
}
\details{
The \code{author} and \code{committer} arguments are optional and if not supplied the current
authenticated user is used. However, if you want to set them explicitly you must specify
a named list with \code{name} and \code{email} as the elements (see examples).

Note: The GitHub API imposes a file size limit of 1MB for this request. For larger files
use the \code{\link[=upload_files]{upload_files()}} function.
}
\examples{
\dontrun{

  # Create a new file on the main branch
  create_file(
    content = "# This is a new file\\\\n\\\\n Created by `create_file()`",
    path    = "new-file.md",
    branch  = "main",
    message = "Created a new file with create_file()",
    repo    = "ChadGoymer/githapi")

  # Create a new file on a new branch
  create_file(
    content = "# This is a new file\\\\n\\\\n Created by `create_file()`",
    path    = "new-file.md",
    branch  = "new-branch",
    message = "Created a new file with create_file()",
    repo    = "ChadGoymer/githapi",
    parent  = "main")

  # Create a new file on the main branch specifying an author and committer
  create_file(
    content   = "# This is a new file\\\\n\\\\n Created by `create_file()`",
    path      = "new-file.md",
    branch    = "main",
    message   = "Created a new file with create_file()",
    repo      = "ChadGoymer/githapi",
    author    = list(name = "Bob",  email = "bob@acme.com"),
    committer = list(name = "Jane", email = "jane@acme.com"))

}

}
