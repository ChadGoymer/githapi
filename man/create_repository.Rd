% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/repositories.R
\name{create_repository}
\alias{create_repository}
\title{Create a repository for a user or organization}
\usage{
create_repository(
  name,
  org,
  description,
  homepage,
  private = FALSE,
  has_issues = TRUE,
  has_projects = TRUE,
  has_wiki = TRUE,
  auto_init = FALSE,
  allow_squash_merge = TRUE,
  allow_merge_commit = TRUE,
  allow_rebase_merge = TRUE,
  delete_branch_on_merge = FALSE,
  ...
)
}
\arguments{
\item{name}{(string) The name of the repository.}

\item{org}{(string, optional) The name of the organization.}

\item{description}{(string, optional) A short description of the repository.}

\item{homepage}{(string, optional) A URL with more information about the
repository.}

\item{private}{(boolean, optional) Whether the repository is private or
public. Default: \code{FALSE}.}

\item{has_issues}{(boolean, optional) Whether to enable issues for the
repository. Default: \code{TRUE}.}

\item{has_projects}{(boolean, optional) Whether to enable projects for the
repository. Default: \code{TRUE}.}

\item{has_wiki}{(boolean, optional) Whether to enable the wiki for the
repository. Default: \code{TRUE}.}

\item{auto_init}{(boolean, optional) Whether to create an initial commit with
empty README. Default: \code{FALSE}.}

\item{allow_squash_merge}{(boolean, optional) Whether to allow squash-merging
pull requests. Default: \code{TRUE}.}

\item{allow_merge_commit}{(boolean, optional) Whether to allow merging pull
requests with a merge commit. Default: \code{TRUE}.}

\item{allow_rebase_merge}{(boolean, optional) Whether to allow rebase-merging
pull requests. Default: \code{TRUE}.}

\item{delete_branch_on_merge}{(boolean, optional) Whether to allow
automatically deleting branches when pull requests are merged. Default:
\code{FALSE}.}

\item{...}{Parameters passed to \code{\link[=gh_request]{gh_request()}}.}
}
\value{
\code{create_repository()} returns a list of the repository's properties.

\strong{Repository Properties:}
\itemize{
\item \strong{id}: The ID of the repository.
\item \strong{name}: The name of the repository.
\item \strong{full_name}: The full name of the repository, in the format:
\code{owner/repo}.
\item \strong{description}: The description of the repository.
\item \strong{owner}: The owner of the repository.
\item \strong{html_url}: The address of the repository's web page in GitHub.
\item \strong{homepage}: The homepage for the repository.
\item \strong{language}: The dominant programming language in the repository.
\item \strong{size}: The overall size of the repository in bytes.
\item \strong{default_branch}: The name of the default branch.
\item \strong{permission}: The permission the authenticated user has.
\item \strong{private}: Whether the repository is private.
\item \strong{has_issues}: Whether the repository has issues.
\item \strong{has_projects}: Whether the repository has projects.
\item \strong{has_wiki}: Whether the repository has a wiki.
\item \strong{has_pages}: Whether the repository has GitHub Pages.
\item \strong{has_downloads}: Whether the repository has downloads.
\item \strong{allow_squash_merge}: Whether the repository allows squash-merging pull
requests.
\item \strong{allow_merge_commit}: Whether the repository allows merging pull requests
with a merge commit.
\item \strong{allow_rebase_merge}: Whether the repository allows rebase-merging pull
requests.
\item \strong{fork}: Whether the repository is a fork of another.
\item \strong{archived}: Whether the repository has been archived.
\item \strong{disabled}: Whether the repository has been disabled.
\item \strong{watchers_count}: The number of watchers.
\item \strong{stargazers_count}: The number of stars.
\item \strong{forks_count}: The number of forks.
\item \strong{pushed_at}: When the repository was last pushed to.
\item \strong{created_at}: When the repository was created.
\item \strong{updated_at}: When the repository was last updated.
}
}
\description{
This function creates a new repository for the authenticated user or an
organization in GitHub. It can also be used to specify whether the project is
private or has issues, projects or a wiki and can define the allowed
behaviour when merging pull requests.
}
\details{
For more details see the GitHub API documentation:
\itemize{
\item \url{https://docs.github.com/en/free-pro-team@latest/rest/reference/repos#create-a-repository-for-the-authenticated-user}
\item \url{https://docs.github.com/en/free-pro-team@latest/rest/reference/repos#create-an-organization-repository}
}
}
\examples{
\dontrun{

  create_repository(
    name        = "user-repository",
    description = "This is a user repository",
    homepage    = "https://user-repository.com"
  )

  create_repository(
    name        = "org-repository",
    org         = "HairyCoos",
    description = "This is a organization repository",
    homepage    = "https://org-repository.com"
  )

}

}
