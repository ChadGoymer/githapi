% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/columns.R
\name{create_column}
\alias{create_column}
\title{Create a column in a GitHub project}
\usage{
create_column(name, project, repo, user, org, ...)
}
\arguments{
\item{name}{(string) The name of the column.}

\item{project}{(integer or string) Either the project number or name.}

\item{repo}{(string, optional) The repository specified in the format: \code{owner/repo}.}

\item{user}{(string, optional) The login of the user.}

\item{org}{(string, optional) The name of the organization.}

\item{...}{Parameters passed to \code{\link[=gh_request]{gh_request()}}.}
}
\value{
\code{create_column()} returns a list of the column properties.

\strong{Column Properties:}
\itemize{
\item \strong{id}: The ID of the column.
\item \strong{name}: The name given to the column.
\item \strong{created_at}: When it was created.
\item \strong{updated_at}: When it was last updated.
}
}
\description{
This function creates a new column in a project in GitHub. The column will be empty so you
will need to add cards separately.
}
\details{
You can create a column in a project associated with either a repository, user or
organisation, by supplying them as an input, as long as you have appropriate permissions.

For more details see the GitHub API documentation:
\itemize{
\item \url{https://developer.github.com/v3/projects/columns/#create-a-project-column}
}
}
\examples{
\dontrun{
  # Create a column in a repository project
  create_column(
    name    = "Test column",
    project = "Test project",
    repo    = "ChadGoymer/test-githapi")

  # Create a column in a user's project
  create_column(
    name    = "Test column",
    project = "Test project",
    user    = "ChadGoymer")

  # Create a column in an organisation's project
  create_column(
    name    = "Test column",
    project = "Test project",
    org     = "HairyCoos")
}

}
