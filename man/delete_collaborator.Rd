% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/collaborators.R
\name{delete_collaborator}
\alias{delete_collaborator}
\title{Remove a collaborator from a repository, project or organization.}
\usage{
delete_collaborator(user, repo, project, org, ...)
}
\arguments{
\item{user}{(string) The login of the user.}

\item{repo}{(string, optional) The repository specified in the format: \code{owner/repo}.}

\item{project}{(integer or string, optional) Either the project number or name.}

\item{org}{(string, optional) The name of the organization. Only required for projects.}

\item{...}{Parameters passed to \code{\link[=gh_request]{gh_request()}}.}
}
\value{
\code{delete_collaborator()} returns a TRUE if successfully deleted.
}
\description{
This function removes a collaborator from a repository, project or organization. Removing
someone from a repository or project does not remove them from the organization, whereas
removing them from an organization also removes them from any repositories and projects
within the organization.
}
\details{
Note: you can only remove a user if the authenticate user is an organization "owner" or a
team "maintainer".

For more details see the GitHub API documentation:
\itemize{
\item \url{https://developer.github.com/v3/repos/collaborators/#remove-user-as-a-collaborator}
\item \url{https://developer.github.com/v3/projects/collaborators/#remove-user-as-a-collaborator}
\item \url{https://developer.github.com/v3/orgs/outside_collaborators/#remove-outside-collaborator}
}
}
\examples{
\dontrun{

  # Remove a collaborator from a repository
  delete_collaborator("ChadGoymer", repo = "ChadGoymer/test-githapi")

  # Remove a collaborator from a project
  delete_collaborator(
    user    = "ChadGoymer",
    project = "Test project",
    org     = "HairyCoos")

  # Remove a collaborator from an organization
  delete_collaborator("ChadGoymer", org = "HairyCoos")

}

}
