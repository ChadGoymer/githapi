% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/milestones.R
\name{view_milestones}
\alias{view_milestones}
\alias{view_milestone}
\alias{browse_milestone}
\title{View milestones within a repository}
\usage{
view_milestones(
  repo,
  state = "open",
  sort = "due_on",
  direction = "asc",
  n_max = 1000,
  ...
)

view_milestone(milestone, repo, ...)

browse_milestone(milestone, repo, ...)
}
\arguments{
\item{repo}{(string) The repository specified in the format: \code{owner/repo}.}

\item{state}{(string, optional) The state of the milestones to filter the result. Can be
either \code{"open"}, \code{"closed"} or \code{"all"}. Default: \code{"open"}.}

\item{sort}{(string, optional) The property to order the returned milestones by. Can
be either \code{"due_on"} or \code{"completeness"}. Default: \code{"due_on"}.}

\item{direction}{(string, optional) The direction of the sort. Can be either \code{"asc"} or
\code{"desc"}. Default: \code{"asc"}.}

\item{n_max}{(integer, optional) Maximum number to return. Default: \code{1000}.}

\item{...}{Parameters passed to \code{\link[=gh_page]{gh_page()}}.}

\item{milestone}{(string or character) The number or title of the milestone.}
}
\value{
\code{view_milestones()} returns a tibble of milestone properties. \code{view_milestone()}
returns a list of properties for a single milestone. \code{browse_milestone()} opens the
default browser on the milestone's page and returns the URL.

\strong{Milestone Properties:}
\itemize{
\item \strong{number}: The number assigned to the milestone within the repository.
\item \strong{title}: The title of the milestone.
\item \strong{description}: The description of the milestone.
\item \strong{state}: The state of the milestone - either "open" or "closed".
\item \strong{open_issues}: The number of open issues within the milestone.
\item \strong{closed_issues}: The number of closed issues within the milestone.
\item \strong{html_url}: The URL of the milestone's web page in GitHub.
\item \strong{creator}: The creator's login.
\item \strong{created_at}: When the milestone was created.
\item \strong{updated_at}: When the milestone was last updated.
\item \strong{due_on}: When the milestone is due.
\item \strong{closed_at}: When the milestone was closed.
}
}
\description{
\code{view_milestones()} summarises milestones in a table with the properties as columns and a
row for each milestone in the repository. \code{view_milestone()} returns a list of all
properties for a single milestone. \code{browse_milestone()} opens the web page for the
milestone in the default browser.
}
\details{
You can summarise all the milestones of a repository in a specified \code{state} and change the
order they are returned using \code{sort} and \code{direction}.

For more details see the GitHub API documentation:
\itemize{
\item \url{https://developer.github.com/v3/issues/milestones/#list-milestones-for-a-repository}
}
}
\examples{
\dontrun{

  # View open milestones in a repository
  view_milestones("ChadGoymer/test-githapi")

  # View closed milestones in a repository
  view_milestones("ChadGoymer/test-githapi", state = "closed")

  # View a single milestone
  view_milestone(
    milestone = "test milestone",
    repo      = "ChadGoymer/test-githapi")

  # Open a milestone's page in a browser
  browse_milestone(
    milestone = "test milestone",
    repo      = "ChadGoymer/test-githapi")

}

}
